<?php

// Generated by Haxe 3.4.4
class api_RecaptchaApi extends ufront_api_UFApi {
	public function __construct() { if(!php_Boot::$skip_constructor) {
		parent::__construct();
	}}
	public function verify($response) {
		$this->messages->push(_hx_anonymous(array("msg" => "verifying..." . _hx_string_or_null($response), "pos" => _hx_anonymous(array("fileName" => "RecaptchaApi.hx", "lineNumber" => 14, "className" => "api.RecaptchaApi", "methodName" => "verify")), "type" => ufront_log_MessageType::$MTrace)));
		$theSecret = "";
		$path = "../googleRecaptchaSecret.txt";
		if(file_exists($path)) {
			$theSecret = sys_io_File::getContent($path);
		}
		return $this->request("https://www.google.com/recaptcha/api/siteverify", true, _hx_anonymous(array("response" => $response, "secret" => $theSecret)));
	}
	public function request($url, $post = null, $params = null) {
		return tink_core__Future_Future_Impl_::async(array(new _hx_lambda(array(&$params, &$post, &$url), "api_RecaptchaApi_0"), 'execute'), null);
	}
	static function __meta__() { $args = func_get_args(); return call_user_func_array(self::$__meta__, $args); }
	static $__meta__;
	function __toString() { return 'api.RecaptchaApi'; }
}
api_RecaptchaApi::$__meta__ = _hx_anonymous(array("fields" => _hx_anonymous(array("verify" => _hx_anonymous(array("returnType" => (new _hx_array(array(3)))))))));
function api_RecaptchaApi_0(&$params, &$post, &$url, $yield) {
	{
		$h = new haxe_Http($url);
		if($params !== null) {
			$_g = 0;
			$_g1 = Reflect::fields($params);
			while($_g < $_g1->length) {
				$f = $_g1[$_g];
				$_g = $_g + 1;
				$h->addParameter($f, Reflect::field($params, $f));
				unset($f);
			}
		}
		$h->onData = array(new _hx_lambda(array(&$yield), "api_RecaptchaApi_1"), 'execute');
		$h->onError = array(new _hx_lambda(array(&$yield), "api_RecaptchaApi_2"), 'execute');
		$h->request($post);
	}
}
function api_RecaptchaApi_1(&$yield, $s) {
	{
		call_user_func_array($yield, array(tink_core_Outcome::Success($s)));
	}
}
function api_RecaptchaApi_2(&$yield, $s1) {
	{
		$tmp = tink_core_Outcome::Failure(new tink_core_TypedError(504, $s1, _hx_anonymous(array("fileName" => "RecaptchaApi.hx", "lineNumber" => 39, "className" => "api.RecaptchaApi", "methodName" => "request"))));
		call_user_func_array($yield, array($tmp));
	}
}
