<?php

// Generated by Haxe 3.4.4
class overrides_CustomErrorPageHandler implements ufront_app_UFErrorHandler{
	public function __construct() {
		if(!isset($this->renderErrorContent)) $this->renderErrorContent = array(new _hx_lambda(array(&$this), "overrides_CustomErrorPageHandler_0"), 'execute');
		if(!isset($this->renderErrorPage)) $this->renderErrorPage = array(new _hx_lambda(array(&$this), "overrides_CustomErrorPageHandler_1"), 'execute');
		if(!php_Boot::$skip_constructor) {
		$this->showStack = false;
		$this->catchErrors = true;
	}}
	public $catchErrors;
	public $showStack;
	public function handleError($httpError, $ctx) {
		$inner = null;
		$inner1 = null;
		if($httpError !== null) {
			$inner1 = _hx_field($httpError, "data") !== null;
		} else {
			$inner1 = false;
		}
		if($inner1) {
			$inner = " (" . Std::string($httpError->data) . ")";
		} else {
			$inner = "";
		}
		$callStack = null;
		if($this->showStack) {
			$callStack = " " . _hx_string_or_null(haxe_CallStack::toString(haxe_CallStack::exceptionStack()));
		} else {
			$callStack = "";
		}
		{
			$msg = "Handling error: " . Std::string($httpError) . _hx_string_or_null($inner) . _hx_string_or_null($callStack);
			$ctx->messages->push(_hx_anonymous(array("msg" => $msg, "pos" => _hx_anonymous(array("fileName" => "CustomErrorPageHandler.hx", "lineNumber" => 44, "className" => "overrides.CustomErrorPageHandler", "methodName" => "handleError")), "type" => ufront_log_MessageType::$MError)));
		}
		if(($ctx->completion & 1 << ufront_web_context_RequestCompletion::$CRequestHandlersComplete->index) === 0) {
			$ctx->response->clear();
			$ctx->response->status = $httpError->code;
			$ctx->response->set_contentType("text/html");
			$ctx1 = $ctx->response;
			$ctx1->write($this->renderError($httpError, $this->showStack));
			$ctx2 = $ctx;
			$ctx2->completion = $ctx2->completion | 1 << ufront_web_context_RequestCompletion::$CRequestHandlersComplete->index;
		}
		if(!$this->catchErrors) {
			$httpError->throwSelf();
		}
		return ufront_core_SurpriseTools::success();
	}
	public function renderErrorContent($error, $showStack = null) { return call_user_func_array($this->renderErrorContent, array($error, $showStack)); }
	public $renderErrorContent = null;
	public function renderErrorPage($title, $content) { return call_user_func_array($this->renderErrorPage, array($title, $content)); }
	public $renderErrorPage = null;
	public function renderError($error, $showStack = null) {
		$content = $this->renderErrorContent($error, $showStack);
		return $this->renderErrorPage($error->message, $content);
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function errorStackItems($stack) {
		$stack->pop();
		$stack = $stack->slice(2, null);
		$arr = _hx_explode("\x0A", haxe_CallStack::toString($stack));
		return $arr;
	}
	function __toString() { return 'overrides.CustomErrorPageHandler'; }
}
function overrides_CustomErrorPageHandler_0(&$__hx__this, $error, $showStack) {
	{
		if($showStack === null) {
			$showStack = false;
		}
		$inner = null;
		if(null !== _hx_field($error, "data")) {
			$inner = "<p class=\"error-data\">" . Std::string($error->data) . "</p>";
		} else {
			$inner = "";
		}
		$pos = null;
		if($showStack) {
			$pos = "<p class=\"error-pos\">&gt; " . _hx_string_or_null($error->printPos()) . "</p>";
		} else {
			$pos = "";
		}
		$exceptionStackItems = overrides_CustomErrorPageHandler::errorStackItems(haxe_CallStack::exceptionStack());
		$exceptionStack = null;
		$exceptionStack1 = null;
		if($showStack) {
			$exceptionStack1 = $exceptionStackItems->length > 0;
		} else {
			$exceptionStack1 = false;
		}
		if($exceptionStack1) {
			$exceptionStack = "<div class=\"error-exception-stack\"><h3>Exception Stack:</h3>\x0A\x09\x09\x09\x09\x09<pre><code>" . _hx_string_or_null($exceptionStackItems->join("\x0A")) . "</pre></code>\x0A\x09\x09\x09\x09</div>";
		} else {
			$exceptionStack = "";
		}
		$content = "\x0A\x09\x09\x09<summary class=\"error-summary\"><h1 class=\"error-message\">" . _hx_string_or_null($error->message) . "</h1></summary>\x0A\x09\x09\x09<details class=\"error-details\"> " . _hx_string_or_null($inner) . " " . _hx_string_or_null($pos) . " " . _hx_string_or_null($exceptionStack) . "</details>\x0A\x09\x09";
		return $content;
	}
}
function overrides_CustomErrorPageHandler_1(&$__hx__this, $title, $content) {
	{
		return "<!DOCTYPE html>\x0A<html>\x0A<head>\x0A\x09<title>" . _hx_string_or_null($title) . "</title>\x0A\x09<link rel=\"stylesheet\" href=\"/css/home.css\" media=\"screen\">\x0A</head>\x0A<body>\x0A\x09<div class=\"container\">\x0A\x09\x09<div id=\"stage\" class=\"\">\x0A\x09\x09\x09<div id=\"panel1\" class=\"recessed0 recessed1\">\x0A\x09\x09\x09\x09<img id=\"confidantLogo\" src=\"/images/confidantLogo.jpg\" alt=\"Confidant Communications\" />\x0A\x09\x09\x09</div>\x0A\x09\x09\x09<div id=\"panel2\" style=\"display:block;opacity:1;top:120px;left:0;\">\x0A\x09\x09\x09\x09<div class=\"content\">\x0A\x09\x09\x09\x09\x09" . _hx_string_or_null($content) . "\x0A\x09\x09\x09\x09\x09<p style=\"text-align:center;\"><a href=\"/\">Go back to the home page please.</a></p>\x0A\x09\x09\x09\x09</div>\x0A\x09\x09\x09</div>\x0A\x09\x09</div>\x0A\x09</div>\x0A</body>\x0A</html>\x0A";
	}
}
