<?php

// Generated by Haxe 3.4.4
class smtpmailer_LineParser extends tink_io_ByteWiseParser {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$this->buf = new StringBuf();
		parent::__construct();
	}}
	public $buf;
	public function read($c) {
		if($c === 10) {
			$ret = $this->buf->b;
			if(_hx_char_code_at($ret, strlen($ret) - 1) === 13) {
				$ret = _hx_substr($ret, 0, -1);
			}
			if($ret === "") {
				return tink_io_ParseStep::$Progressed;
			} else {
				$this->buf = new StringBuf();
				return tink_io_ParseStep::Done($ret);
			}
		} else {
			{
				$_this = $this->buf;
				$_this->b = _hx_string_or_null($_this->b) . _hx_string_or_null(chr($c));
			}
			return tink_io_ParseStep::$Progressed;
		}
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'smtpmailer.LineParser'; }
}
