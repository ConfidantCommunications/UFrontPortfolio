<?php

// Generated by Haxe 3.4.4
class smtpmailer_MultipartEncoder {
	public function __construct(){}
	static function encode($email) {
		$main = null;
		$content = null;
		if($email->content->html === null) {
			$content = new mtwin_mail_Part("text/plain", null, "utf-8");
			$content->setContent($email->content->text);
		} else {
			$content = new mtwin_mail_Part("multipart/alternative", null, "utf-8");
			if($email->content->text !== null) {
				$content->newPart("text/plain")->setContent($email->content->text);
			}
			if($email->content->html !== null) {
				$content->newPart("text/html")->setContent($email->content->html);
			}
		}
		if($email->attachments !== null) {
			$main = new mtwin_mail_Part("multipart/mixed", null, null);
			$main->addPart($content);
			{
				$_g = 0;
				$_g1 = $email->attachments;
				while($_g < $_g1->length) {
					$file = $_g1[$_g];
					$_g = $_g + 1;
					$type = mime_Mime::lookup($file);
					if($type === null) {
						$type = "application/octet-stream";
					}
					$part = $main->newPart($type);
					$part->setContentFromFile($file, $type);
					unset($type,$part,$file);
				}
			}
		} else {
			$main = $content;
		}
		$main->setHeader("From", smtpmailer__Address_Address_Impl_::format($email->from));
		$main->setHeader("To", $email->to->map(array(new _hx_lambda(array(), "smtpmailer_MultipartEncoder_0"), 'execute'))->join(","));
		$main->setHeader("Subject", $email->subject);
		if($email->headers !== null) {
			$key = $email->headers->keys();
			while($key->hasNext()) {
				$key1 = $key->next();
				$main->setHeader($key1, $email->headers->get($key1));
				unset($key1);
			}
		}
		return $main->get();
	}
	function __toString() { return 'smtpmailer.MultipartEncoder'; }
}
function smtpmailer_MultipartEncoder_0($to) {
	{
		return smtpmailer__Address_Address_Impl_::format($to);
	}
}
