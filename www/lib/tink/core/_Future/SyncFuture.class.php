<?php

// Generated by Haxe 3.4.4
class tink_core__Future_SyncFuture implements tink_core__Future_FutureObject{
	public function __construct($value) {
		if(!php_Boot::$skip_constructor) {
		$this->value = $value;
	}}
	public $value;
	public function map($f) {
		return new tink_core__Future_SyncFuture($this->value->map($f));
	}
	public function flatMap($f) {
		$l = $this->value->map($f);
		return new tink_core__Future_SimpleFuture(array(new _hx_lambda(array(&$l), "tink_core__Future_SyncFuture_0"), 'execute'));
	}
	public function handle($cb) {
		tink_core__Callback_Callback_Impl_::invoke($cb, $this->value->get());
		return null;
	}
	public function eager() {
		return $this;
	}
	public function gather() {
		return $this;
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'tink.core._Future.SyncFuture'; }
}
function tink_core__Future_SyncFuture_0(&$l, $cb) {
	{
		return $l->get()->handle($cb);
	}
}
